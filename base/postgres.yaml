---
apiVersion: v1
kind: PersistentVolumeClaim # Create PVC
metadata:
  namespace: dso-demo-java
  name: postgresql-data-claim # Sets name of PV
spec:
  accessModes:
    - ReadWriteOnce # Sets read and write access
  resources:
    requests:
      storage: 1Gi # Sets volume size
---
apiVersion: v1
kind: Service
metadata:
  namespace: dso-demo-java
  name: postgres # Sets service name
  labels:
    app: postgres # Labels and Selectors
spec:
  type: ClusterIP # Sets service type
  ports:
    - port: 5432 # Sets port to run the postgres application
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: livre-blanc-transverse-recette
  name: postgres-lb-recette  # Sets Deployment name
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14.5 # Sets Image
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432  # Exposes container port
          env:
            - name: POSTGRES_DB
              value: "postgresdb"
            - name: "POSTGRES_USER"
              value: "pg_user"
            - name: "POSTGRES_PASSWORD"
              value: "My$ecrETPAss0rd*"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              subPath: data
              name: postgredb
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgresql-data-claim